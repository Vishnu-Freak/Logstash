#Using file plugin to read the logs
input {
  file {
    path => "/home/logstash/sample.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

#Dropping if the log is empty
filter {
  if [message] == "" {
   drop {}
 }


#Grok pattern for the raw log
  grok {
    match => {
      "message" => '<%{INT}>%{INT} %{DATA:timestamp} %{WORD:PrinciapalHostname} %{WORD:ApplicationName} %{INT:ProcessId} - - alertname="%{DATA:Description}" computername="%{DATA:SourceHostname}" computerip="%{IP:SourceIp}" severity="%{INT:Severity}"'
     }
  }

#removing the unwanted/duplicate fields
 mutate {
  remove_field => ["host", "log", "event", "@timestamp", "@version"]
 }


#Replacing the severity in words based on the number
  if [Severity] != "" {
    if [Severity] == "1" {
      mutate {
        replace => {
          "Severity" => "High"
        }
      }
    }else if [Severity] == "2" {
      mutate {
        replace => {
          "Severity" => "Medium"
        }
      }
    }else if [Severity] == "3" {
      mutate {
        replace => {
          "Severity" => "Low"
        }
      }
    }else if [Severity] == "4" {
      mutate {
        replace => {
          "Severity" => "Informational"
          }
        }
    }else {
      mutate {
        replace => {
          "Severity" => "Unknown Severity"
        }
      }
    }
  }
}

#using the file plugin to store the result
  output {
    file {
      path => "/home/logstash/result.json"
      codec => json_lines
    }
}